generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      String   @default("user")
  cart      Cart?
  orders    Order[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  brand       String?
  description String?
  category    String
  quantity    String?
  packaging   String?
  country     String?
  ingredients String?
  calories    String?
  price       Decimal?    @db.Decimal(12, 2)
  imageUrl    String?
  createdAt   DateTime    @default(now())
  productId   String      @unique
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@index([category])
  @@index([name])
  @@index([brand])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  totalPrice Decimal     @db.Decimal(12, 2)
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId String
  quantity  Int      @default(1)
  price     Decimal  @db.Decimal(12, 2)
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [productId])
}

model Cart {
  id         Int        @id @default(autoincrement())
  userId     Int        @unique
  createdAt  DateTime   @default(now())
  totalPrice Decimal    @db.Decimal(12, 2)
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [productId])
}
