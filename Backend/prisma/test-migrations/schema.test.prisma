// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:memorydb?mode=memory&cache=shared"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("user")
  orders    Order[]
  cart      Cart?
  createdAt DateTime @default(now())
}

model Product {
  id          Int      @id @default(autoincrement())
  productId   String   @unique
  name        String
  brand       String?
  category    String?
  quantity    String?
  packaging   String?
  country     String?
  ingredients String?
  calories    String?
  price       Float?
  imageUrl    String?
  createdAt   DateTime @default(now())
  orderItems  OrderItem[]
  cartItems   CartItem[]
  @@index([category])
  @@index([name])
  @@index([brand])
}

model Order {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  items       OrderItem[]
  totalPrice  Float
  createdAt   DateTime  @default(now())
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     Int
  product     Product  @relation(fields: [productId], references: [productId])
  productId   String
  quantity    Int      @default(1)
  price       Float
  createdAt   DateTime @default(now())
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product  @relation(fields: [productId], references: [productId])
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
}