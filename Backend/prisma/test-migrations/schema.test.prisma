// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:memorydb?mode=memory&cache=shared"
}

enum AddressType {
  SHIPPING
  BILLING
}

enum PaymentStatus {
  REQUIRES_PAYMENT_METHOD
  REQUIRES_ACTION
  PROCESSING
  SUCCEEDED
  CANCELED
  FAILED
}

model Address {
  id         Int         @id @default(autoincrement())
  userId     Int
  type       AddressType
  isDefault  Boolean     @default(false)
  name       String?     
  street     String
  street2    String?
  postalCode String
  city       String
  country    String
  phone      String?
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, type])
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  password          String
  firstName         String?
  lastName          String?           
  phone             String?
  createdAt         DateTime @default(now())
  role              String   @default("user")
  cart              Cart?
  orders            Order[]
  addresses         Address[]
  stripeCustomerId  String?  @unique 
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  brand       String?
  description String?
  category    String?
  quantity    String?
  packaging   String?
  country     String?
  ingredients String?
  calories    String?
  price       Decimal?    
  imageUrl    String?
  createdAt   DateTime    @default(now())
  productId   String      @unique
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@index([category])
  @@index([name])
  @@index([brand])
}

model Order {
  id                    Int         @id @default(autoincrement())
  userId                Int
  totalPrice            Decimal     
  createdAt             DateTime    @default(now())
  shippingName          String
  shippingStreet        String
  shippingStreet2       String?
  shippingPostalCode    String
  shippingCity          String
  shippingCountry       String
  shippingPhone         String?
  user                  User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items                 OrderItem[]
  paymentProvider       String         @default("stripe")
  paymentStatus         PaymentStatus  @default(REQUIRES_PAYMENT_METHOD)
  stripePaymentIntentId String?        @unique
  stripePaymentMethodId String?
  stripeChargeId        String?
  stripeReceiptUrl      String?
  cardBrand             String?
  cardLast4             String?
  paidAt                DateTime?
  paymentData           Json?

  @@index([userId, createdAt])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId String
  quantity  Int      @default(1)
  price     Decimal  
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [productId])
}

model Cart {
  id         Int        @id @default(autoincrement())
  userId     Int        @unique
  createdAt  DateTime   @default(now())
  totalPrice Decimal    
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [productId])
}
